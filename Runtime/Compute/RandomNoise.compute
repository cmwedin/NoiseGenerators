// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#include "/Includes/PRNG.compute"

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> _NoiseTexture;
uint _Seed;
uint _TexWidth;
uint _TexHeight;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if(id.x < 0 || id.x >= _TexWidth || id.y < 0 || id.y >= _TexHeight) {return;}

    uint hash = pcg_hash(_Seed);
    // int pixelIndex = id.y * _TexHeight + id.x;
    uint4 hash4d = pcg4d_hash(uint4(id.x,id.y,hash,pcg_hash(hash)));
    _NoiseTexture[id.xy] = hash4d / 4294967295.0;
}
